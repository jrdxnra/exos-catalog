{"version":3,"file":"static/js/882.c040438f.chunk.js","mappings":"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","sources":["components/GymTabs.js","components/GymPanel.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GymTabs.css';\n\nfunction GymTabs({ activeGym, onGymChange, gyms }) {\n  return (\n    <div className=\"gym-tabs\">\n      {gyms.map((gym) => (\n        <button\n          key={gym}\n          className={`gym-tab ${activeGym === gym ? 'active' : ''}`}\n          onClick={() => onGymChange(gym)}\n        >\n          {gym}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nGymTabs.propTypes = {\n  activeGym: PropTypes.string.isRequired,\n  onGymChange: PropTypes.func.isRequired,\n  gyms: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GymTabs; ","import React, { useState } from 'react';\nimport GymTabs from './GymTabs';\n\nconst STATUS_OPTIONS = [\n  { value: 'Hold', label: 'Hold', color: '#ffc107' }, // yellow\n  { value: 'Waitlist', label: 'Waitlist', color: '#6c757d' }, // gray\n  { value: 'Pending Approval', label: 'Pending Approval', color: '#007bff' }, // blue\n  { value: 'Approved', label: 'Approved', color: '#28a745' }, // green\n  { value: 'Not Approved', label: 'Not Approved', color: '#dc3545' }, // red\n];\n\nconst GymPanel = ({ activeGym, gyms, gymItems, isGymListCollapsed, handleGymClick, handleRemoveFromGym }) => {\n  const [copySuccess, setCopySuccess] = useState(false);\n  const [itemStatuses, setItemStatuses] = useState({});\n\n  // Format cost to ensure single $ symbol\n  const formatCost = (cost) => {\n    if (!cost) return '';\n    // Remove any existing $ symbols and add a single one\n    return `$${cost.replace(/[$]/g, '')}`;\n  };\n\n  const handleCopyList = () => {\n    const items = gymItems[activeGym] || [];\n    if (items.length === 0) return;\n    const lines = items.map(item => [\n      item.quantity,\n      item[\"Item Name\"] || '',\n      item.Brand || '',\n      item.Category || '',\n      formatCost(item.Cost),\n      item[\"EXOS Part Number\"] || '',\n      item.URL || ''\n    ].join('\\t'));\n    const text = lines.join('\\n');\n    navigator.clipboard.writeText(text).then(() => {\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 2000);\n    });\n  };\n\n  // Calculate total cost\n  const totalCost = (gymItems[activeGym] || []).reduce((sum, item) => {\n    const cost = parseFloat(item.Cost?.replace(/[$]/g, '') || '0');\n    const qty = parseInt(item.quantity, 10);\n    if (!isNaN(cost) && !isNaN(qty)) {\n      return sum + cost * qty;\n    }\n    return sum;\n  }, 0);\n\n  const handleStatusChange = (itemName, status) => {\n    setItemStatuses(prev => ({ ...prev, [itemName]: status }));\n  };\n\n  return (\n    <div className=\"gym-panel-floating\">\n      <div className=\"gym-panel-inner\">\n        <GymTabs\n          activeGym={activeGym}\n          onGymChange={handleGymClick}\n          gyms={gyms}\n        />\n        {!isGymListCollapsed && (\n          <div className=\"gym-items\" style={{ padding: '0.75rem 0.5rem', margin: '0.25rem 0' }}>\n            <h2>{activeGym} Items</h2>\n            {gymItems[activeGym].length === 0 ? (\n              <p className=\"no-items-message\">No items added to {activeGym} yet.</p>\n            ) : (\n              <>\n                <div className=\"gym-items-list\">\n                  {gymItems[activeGym].map((item, index) => (\n                    <div key={index} className=\"gym-item\" style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', padding: '0.5rem 0', minWidth: 0 }}>\n                      {/* Status Dropdown */}\n                      <select\n                        className=\"status-select\"\n                        value={itemStatuses[item[\"Item Name\"]] || ''}\n                        onChange={e => handleStatusChange(item[\"Item Name\"], e.target.value)}\n                        style={{\n                          fontWeight: 'bold',\n                          color: STATUS_OPTIONS.find(opt => opt.value === (itemStatuses[item[\"Item Name\"]] || ''))?.color || '#333',\n                          background: '#f8f9fa',\n                          border: '1px solid #ccc',\n                          borderRadius: '4px',\n                          padding: '0.05rem 0.2rem',\n                          minWidth: '65px',\n                          fontSize: '0.85em',\n                          marginRight: '0.25rem',\n                          flexShrink: 0,\n                          maxWidth: '90px',\n                        }}\n                      >\n                        <option value=\"\">Status</option>\n                        {STATUS_OPTIONS.map(opt => (\n                          <option key={opt.value} value={opt.value} style={{ color: opt.color }}>\n                            {opt.label}\n                          </option>\n                        ))}\n                      </select>\n                      {/* Item Name Only (no brand) */}\n                      <div style={{ flex: 1, minWidth: 0, overflow: 'hidden' }}>\n                        <span style={{ fontWeight: 'bold', fontSize: '1.05em', color: '#222', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', display: 'block' }}>{item[\"Item Name\"]}</span>\n                      </div>\n                      {/* Price x Qty */}\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '0.25rem', minWidth: '90px', justifyContent: 'flex-end', flexShrink: 0 }}>\n                        <span style={{ fontWeight: 'bold', color: '#0046be', whiteSpace: 'nowrap' }}>{item.Cost ? formatCost(item.Cost) : ''}</span>\n                        <span style={{ color: '#666', fontWeight: 500, whiteSpace: 'nowrap' }}>Ã— {item.quantity}</span>\n                      </div>\n                      {/* Remove Button as Trash Icon */}\n                      <button\n                        onClick={() => handleRemoveFromGym(activeGym, index)}\n                        className=\"remove-item-button\"\n                        style={{ marginLeft: '1rem', background: 'none', border: 'none', padding: '4px', cursor: 'pointer', color: '#dc3545', fontSize: '1.2rem', display: 'flex', alignItems: 'center', flexShrink: 0 }}\n                        aria-label=\"Remove\"\n                      >\n                        <svg width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M6 8V15C6 15.5523 6.44772 16 7 16H13C13.5523 16 14 15.5523 14 15V8\" stroke=\"#dc3545\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                          <path d=\"M9 11V13\" stroke=\"#dc3545\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                          <path d=\"M11 11V13\" stroke=\"#dc3545\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                          <path d=\"M4 6H16\" stroke=\"#dc3545\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                          <path d=\"M8 6V5C8 4.44772 8.44772 4 9 4H11C11.5523 4 12 4.44772 12 5V6\" stroke=\"#dc3545\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        </svg>\n                      </button>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"gym-items-total\" style={{ textAlign: 'right', fontWeight: 'bold', margin: '0.5rem 0 0.5rem 0' }}>\n                  Total: {formatCost(totalCost.toFixed(2))}\n                </div>\n                <button className=\"copy-list-button\" onClick={handleCopyList}>\n                  {copySuccess ? 'Copied!' : 'Copy List'}\n                </button>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(GymPanel); "],"names":["_ref","activeGym","onGymChange","gyms","_jsx","className","children","map","gym","concat","onClick","STATUS_OPTIONS","value","label","color","GymPanel","gymItems","isGymListCollapsed","handleGymClick","handleRemoveFromGym","copySuccess","setCopySuccess","useState","itemStatuses","setItemStatuses","formatCost","cost","replace","totalCost","reduce","sum","item","_item$Cost","parseFloat","Cost","qty","parseInt","quantity","isNaN","_jsxs","GymTabs","style","padding","margin","length","_Fragment","index","_STATUS_OPTIONS$find","display","alignItems","gap","minWidth","onChange","e","handleStatusChange","itemName","status","target","prev","_objectSpread","fontWeight","find","opt","background","border","borderRadius","fontSize","marginRight","flexShrink","maxWidth","flex","overflow","whiteSpace","textOverflow","justifyContent","marginLeft","cursor","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","textAlign","toFixed","handleCopyList","items","text","Brand","Category","URL","join","navigator","clipboard","writeText","then","setTimeout","React"],"sourceRoot":""}