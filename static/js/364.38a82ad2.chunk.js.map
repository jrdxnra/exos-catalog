{"version":3,"file":"static/js/364.38a82ad2.chunk.js","mappings":"iKAGA,MAiIA,EAjIoBA,IAAyF,IAADC,EAAAC,EAAA,IAAvF,QAAEC,EAAO,WAAEC,EAAU,YAAEC,EAAW,eAAEC,EAAc,SAAEC,EAAQ,WAAEC,EAAU,OAAEC,GAAQT,EAwBhE,QAAjBC,EAAAE,EAAQO,iBAAS,IAAAT,GAAjBA,EAAmBU,cAuBvC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAeC,QAtBPC,IACE,WAArBA,EAAEC,OAAOC,SAA6C,UAArBF,EAAEC,OAAOC,SAC5CC,OAAOC,KAAKhB,EAAQiB,IAAK,WAoB4BC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,OACEC,IAAKpB,EAAQqB,SAAW,sDACxBC,IAAKtB,EAAQ,aACbU,UAAU,2BAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBQ,SAAA,EACnCT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBQ,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OACEC,IAAKpB,EAAQuB,SAAW,mDACxBD,IAAI,UACJZ,UAAU,aAEZD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBQ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAQ,eACyB,SAApB,QAAjBD,EAAAC,EAAQO,iBAAS,IAAAR,OAAA,EAAjBA,EAAmBS,iBAClBW,EAAAA,EAAAA,KAAA,QAAMT,UAAU,kBAAiBQ,SAAC,6BAKxCT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBQ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,KAAGT,UAAU,gBAAeQ,SAAElB,EAAQwB,SACtCL,EAAAA,EAAAA,KAAA,KAAGT,UAAU,mBAAkBQ,SAAElB,EAAQyB,YACzChB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcQ,SAAA,CAAC,IAAElB,EAAQ0B,SACtCP,EAAAA,EAAAA,KAAA,KAAGT,UAAU,sBAAqBQ,SAAElB,EAAQ,0BAG9CS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBQ,SAAA,EAC9BT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBQ,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLC,QAASvB,EACTwB,SAvCUjB,IACpBA,EAAEkB,kBACF1B,EAASJ,EAAQ,aAAcY,EAAEC,OAAOe,UAsC9BlB,UAAU,sBAEZD,EAAAA,EAAAA,MAAA,UACEsB,MAAOzB,EACPuB,SAjDgBjB,IAC1BA,EAAEkB,kBACF3B,EAAeH,EAAQ,aAAcY,EAAEC,OAAOkB,QAgDpCrB,UAAU,kBAAiBQ,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,UAAQY,MAAM,GAAEb,SAAC,mBACjBC,EAAAA,EAAAA,KAAA,UAAQY,MAAM,OAAMb,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQY,MAAM,iBAAgBb,SAAC,oBAC/BC,EAAAA,EAAAA,KAAA,UAAQY,MAAM,WAAUb,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQY,MAAM,UAASb,SAAC,aACxBC,EAAAA,EAAAA,KAAA,UAAQY,MAAM,WAAUb,SAAC,oBAG7BC,EAAAA,EAAAA,KAAA,UACET,UAAS,eAAAsB,OAAiB9B,IAAgBF,EAAQ,aAAe,UAAY,IAC7EW,QAnEeC,IACvBA,EAAEkB,kBACF7B,EAAWD,IAiEsBkB,SAExBhB,IAAgBF,EAAQ,aAAe,UAAY,uB","sources":["components/ProductCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProductCard = ({ product, onCopyInfo, copySuccess, onStatusChange, onSelect, isSelected, status }) => {\n  const getFavicon = (url) => {\n    try {\n      const domain = new URL(url).hostname;\n      return `https://www.google.com/s2/favicons?domain=${domain}`;\n    } catch {\n      return null;\n    }\n  };\n\n  const getPreviewUrl = (url) => {\n    try {\n      return `https://api.microlink.io/?url=${url}&screenshot=true&meta=false&embed=screenshot.url`;\n    } catch {\n      return null;\n    }\n  };\n\n  const formatCost = (cost) => {\n    const costStr = String(cost);\n    if (costStr.startsWith('$')) return costStr;\n    return `$${costStr}`;\n  };\n\n  const isPreferred = product.preferred?.toLowerCase() === 'yes';\n\n  const handleCardClick = (e) => {\n    if (e.target.tagName !== 'SELECT' && e.target.tagName !== 'INPUT') {\n      window.open(product.url, '_blank');\n    }\n  };\n\n  const handleCopyClick = (e) => {\n    e.stopPropagation();\n    onCopyInfo(product);\n  };\n\n  const handleStatusChange = (e) => {\n    e.stopPropagation();\n    onStatusChange(product[\"item name\"], e.target.value);\n  };\n\n  const handleSelect = (e) => {\n    e.stopPropagation();\n    onSelect(product[\"item name\"], e.target.checked);\n  };\n\n  return (\n    <div className=\"product-card\" onClick={handleCardClick}>\n      <img\n        src={product.preview || 'https://via.placeholder.com/300x200?text=No+Preview'}\n        alt={product[\"item name\"]}\n        className=\"product-preview-image\"\n      />\n      <div className=\"product-card-content\">\n        <div className=\"product-card-header\">\n          <img\n            src={product.favicon || 'https://via.placeholder.com/24?text=üåê'}\n            alt=\"favicon\"\n            className=\"favicon\"\n          />\n          <div className=\"title-container\">\n            <h3>{product[\"item name\"]}</h3>\n            {product.preferred?.toLowerCase() === 'yes' && (\n              <span className=\"preferred-badge\">‚≠ê Preferred!</span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"product-details\">\n          <p className=\"product-brand\">{product.brand}</p>\n          <p className=\"product-category\">{product.category}</p>\n          <p className=\"product-cost\">${product.cost}</p>\n          <p className=\"product-part-number\">{product[\"exos part number\"]}</p>\n        </div>\n\n        <div className=\"product-actions\">\n          <div className=\"product-selection\">\n            <input\n              type=\"checkbox\"\n              checked={isSelected}\n              onChange={handleSelect}\n              className=\"product-checkbox\"\n            />\n            <select\n              value={status}\n              onChange={handleStatusChange}\n              className=\"status-dropdown\"\n            >\n              <option value=\"\">Select Status</option>\n              <option value=\"Hold\">Hold</option>\n              <option value=\"Needs Approval\">Needs Approval</option>\n              <option value=\"Approved\">Approved</option>\n              <option value=\"Ordered\">Ordered</option>\n              <option value=\"Received\">Received</option>\n            </select>\n          </div>\n          <button\n            className={`copy-button ${copySuccess === product[\"item name\"] ? 'success' : ''}`}\n            onClick={handleCopyClick}\n          >\n            {copySuccess === product[\"item name\"] ? 'Copied!' : 'Copy Info'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    \"item name\": PropTypes.string,\n    brand: PropTypes.string,\n    category: PropTypes.string,\n    cost: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    \"exos part number\": PropTypes.string,\n    url: PropTypes.string,\n    preview: PropTypes.string,\n    favicon: PropTypes.string,\n    preferred: PropTypes.string\n  }).isRequired,\n  onCopyInfo: PropTypes.func.isRequired,\n  copySuccess: PropTypes.string,\n  onStatusChange: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  status: PropTypes.string\n};\n\nexport default ProductCard; "],"names":["_ref","_product$preferred","_product$preferred2","product","onCopyInfo","copySuccess","onStatusChange","onSelect","isSelected","status","preferred","toLowerCase","_jsxs","className","onClick","e","target","tagName","window","open","url","children","_jsx","src","preview","alt","favicon","brand","category","cost","type","checked","onChange","stopPropagation","value","concat"],"sourceRoot":""}