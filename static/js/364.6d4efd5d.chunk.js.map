{"version":3,"file":"static/js/364.6d4efd5d.chunk.js","mappings":"iKAyFA,QAtFA,SAAoBA,GAA8D,IAADC,EAAA,IAA5D,QAAEC,EAAO,WAAEC,EAAU,YAAEC,EAAW,SAAEC,EAAQ,WAAEC,GAAYN,EAiB7E,OACEO,EAAAA,EAAAA,MAAA,OACEC,UAAS,gBAAAC,OAAkBH,EAAa,WAAa,IACrDI,QAnBqBC,IACnBT,EAAQU,KACVC,OAAOC,KAAKZ,EAAQU,IAAK,WAiBAG,SAAA,CAExBb,EAAQU,MACPI,EAAAA,EAAAA,KAAA,OACEC,IAAKf,EAAQU,IACbM,IAAKhB,EAAQ,aACbM,UAAU,2BAIdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBO,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKR,UAAU,sBAAqBO,UAClCR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBO,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKb,EAAQ,eACyB,SAApB,QAAjBD,EAAAC,EAAQiB,iBAAS,IAAAlB,OAAA,EAAjBA,EAAmBmB,iBAClBJ,EAAAA,EAAAA,KAAA,QAAMR,UAAU,kBAAiBO,SAAC,oBAKxCR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBO,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,KAAGR,UAAU,gBAAeO,SAAEb,EAAQmB,SACtCL,EAAAA,EAAAA,KAAA,KAAGR,UAAU,mBAAkBO,SAAEb,EAAQoB,YACzCN,EAAAA,EAAAA,KAAA,KAAGR,UAAU,eAAcO,SAAEb,EAAQqB,KAAI,IAAAd,OAAOP,EAAQqB,MAAS,MACjEP,EAAAA,EAAAA,KAAA,KAAGR,UAAU,sBAAqBO,SAAEb,EAAQ,0BAG9CK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBO,SAAA,EAC9BR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBO,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLC,QAASnB,EACToB,SAxCiBf,IAC3BA,EAAEgB,kBACFtB,EAASH,EAAQ,cAAeI,IAuCtBI,QAASC,GAAKA,EAAEgB,qBAElBX,EAAAA,EAAAA,KAAA,SAAON,QAASC,GAAKA,EAAEgB,kBAAkBZ,SAAC,oBAG5CC,EAAAA,EAAAA,KAAA,UACER,UAAS,eAAAC,OAAiBL,IAAgBF,EAAQ,aAAe,UAAY,IAC7EQ,QArDeC,IACvBA,EAAEgB,kBACFxB,EAAWD,IAmDsBa,SAExBX,IAAgBF,EAAQ,aAAe,UAAY,sBAMhE,C","sources":["components/ProductCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ProductCard({ product, onCopyInfo, copySuccess, onSelect, isSelected }) {\n  const handleCardClick = (e) => {\n    if (product.url) {\n      window.open(product.url, '_blank');\n    }\n  };\n\n  const handleCopyClick = (e) => {\n    e.stopPropagation();\n    onCopyInfo(product);\n  };\n\n  const handleCheckboxClick = (e) => {\n    e.stopPropagation();\n    onSelect(product[\"item name\"], !isSelected);\n  };\n\n  return (\n    <div \n      className={`product-card ${isSelected ? 'selected' : ''}`}\n      onClick={handleCardClick}\n    >\n      {product.url && (\n        <img\n          src={product.url}\n          alt={product[\"item name\"]}\n          className=\"product-preview-image\"\n        />\n      )}\n      \n      <div className=\"product-card-content\">\n        <div className=\"product-card-header\">\n          <div className=\"title-container\">\n            <h3>{product[\"item name\"]}</h3>\n            {product.preferred?.toLowerCase() === 'yes' && (\n              <span className=\"preferred-badge\">Preferred</span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"product-details\">\n          <p className=\"product-brand\">{product.brand}</p>\n          <p className=\"product-category\">{product.category}</p>\n          <p className=\"product-cost\">{product.cost ? `$${product.cost}` : ''}</p>\n          <p className=\"product-part-number\">{product[\"exos part number\"]}</p>\n        </div>\n\n        <div className=\"product-buttons\">\n          <div className=\"product-checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={isSelected}\n              onChange={handleCheckboxClick}\n              onClick={e => e.stopPropagation()}\n            />\n            <label onClick={e => e.stopPropagation()}>Add to List</label>\n          </div>\n          \n          <button\n            className={`copy-button ${copySuccess === product[\"item name\"] ? 'success' : ''}`}\n            onClick={handleCopyClick}\n          >\n            {copySuccess === product[\"item name\"] ? 'Copied!' : 'Copy Info'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    \"item name\": PropTypes.string,\n    brand: PropTypes.string,\n    category: PropTypes.string,\n    cost: PropTypes.string,\n    \"exos part number\": PropTypes.string,\n    url: PropTypes.string,\n    preferred: PropTypes.string\n  }).isRequired,\n  onCopyInfo: PropTypes.func.isRequired,\n  copySuccess: PropTypes.string,\n  onSelect: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired\n};\n\nexport default ProductCard; "],"names":["_ref","_product$preferred","product","onCopyInfo","copySuccess","onSelect","isSelected","_jsxs","className","concat","onClick","e","url","window","open","children","_jsx","src","alt","preferred","toLowerCase","brand","category","cost","type","checked","onChange","stopPropagation"],"sourceRoot":""}