{"version":3,"file":"static/js/364.e14377cd.chunk.js","mappings":"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","sources":["components/ProductCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst STATUS_OPTIONS = [\n  { value: 'Hold', label: 'Hold', color: '#ffc107', bgColor: '#fff3cd', description: 'Buy Later List' },\n  { value: 'Waitlist', label: 'Waitlist', color: '#6c757d', bgColor: '#f8f9fa', description: 'Waiting for Approval' },\n  { value: 'Pending Approval', label: 'Pending Approval', color: '#007bff', bgColor: '#cce7ff', description: 'Manager Review' },\n  { value: 'Approved', label: 'Approved', color: '#28a745', bgColor: '#d4edda', description: 'Ready for Procurement' },\n  { value: 'Not Approved', label: 'Not Approved', color: '#dc3545', bgColor: '#f8d7da', description: 'Requires Note' },\n];\n\nfunction ProductCard({ product, onCopyInfo, copySuccess, onAddToGym, itemStatuses, onStatusChange, statusNotes, onNoteSubmit }) {\n  const [quantity, setQuantity] = useState('1');\n  const [selectedGym, setSelectedGym] = useState('');\n  const [customQty, setCustomQty] = useState('');\n  const [previewUrl, setPreviewUrl] = useState(\"https://via.placeholder.com/300x200?text=Loading...\");\n  const [showNoteModal, setShowNoteModal] = useState(false);\n  const [noteText, setNoteText] = useState('');\n\n  const handleAddToGym = () => {\n    const qty = quantity === 'custom' ? parseInt(customQty, 10) : parseInt(quantity, 10);\n    if (selectedGym && qty > 0) {\n      onAddToGym(product, selectedGym, qty, currentStatus);\n      setQuantity('1');\n      setCustomQty('');\n      setSelectedGym('');\n    }\n  };\n\n  const handleStatusChange = (status) => {\n    if (status === 'Not Approved') {\n      setShowNoteModal(true);\n    } else {\n      onStatusChange(product[\"Item Name\"], status);\n    }\n  };\n\n  const handleNoteSubmit = () => {\n    if (noteText.trim()) {\n      onNoteSubmit(product[\"Item Name\"], noteText);\n      setNoteText('');\n      setShowNoteModal(false);\n    }\n  };\n\n  const handleNoteCancel = () => {\n    setNoteText('');\n    setShowNoteModal(false);\n  };\n\n  // Format cost to ensure single $ symbol\n  const formatCost = (cost) => {\n    if (!cost) return '';\n    // Remove any existing $ symbols and add a single one\n    return `$${cost.replace(/[$]/g, '')}`;\n  };\n\n  const currentStatus = itemStatuses?.[product[\"Item Name\"]] || '';\n  const currentNote = statusNotes?.[product[\"Item Name\"]] || '';\n\n  useEffect(() => {\n    let isMounted = true;\n    if (product.URL) {\n      fetch(`https://api.microlink.io/?url=${encodeURIComponent(product.URL)}&screenshot=true&meta=false`)\n        .then(res => res.json())\n        .then(data => {\n          if (isMounted && data.status === 'success' && data.data.screenshot && data.data.screenshot.url) {\n            setPreviewUrl(data.data.screenshot.url);\n          } else {\n            setPreviewUrl(\"https://via.placeholder.com/300x200?text=No+Preview\");\n          }\n        })\n        .catch(() => setPreviewUrl(\"https://via.placeholder.com/300x200?text=No+Preview\"))\n        .finally(() => {\n          // Loading state is handled implicitly by the useEffect\n        });\n    } else {\n      setPreviewUrl(\"https://via.placeholder.com/300x200?text=No+Preview\");\n    }\n    return () => { isMounted = false; };\n  }, [product.URL]);\n\n  return (\n    <div className={`product-card${product.URL ? ' has-url' : ''}`}>\n      {product.URL ? (\n        <a\n          href={product.URL}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ display: 'block' }}\n        >\n          <img\n            src={previewUrl}\n            alt={product[\"Item Name\"]}\n            className=\"product-preview-image\"\n          />\n        </a>\n      ) : (\n        <img\n          src={previewUrl}\n          alt={product[\"Item Name\"]}\n          className=\"product-preview-image\"\n        />\n      )}\n      <div className=\"product-card-content\">\n        <div className=\"product-card-header\">\n          <div className=\"title-container\">\n            <h3 className=\"product-title-fixed\">{product[\"Item Name\"]}</h3>\n            {product.Preferred?.toLowerCase() === 'yes' && (\n              <span className=\"preferred-badge\"><span role=\"img\" aria-label=\"star\">‚≠ê</span> Preferred Item</span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"product-details\">\n          <p className=\"product-brand\">{product.Brand}</p>\n          <p className=\"product-category\">{product.Category}</p>\n          {product.Cost && <p className=\"product-cost\">{formatCost(product.Cost)}</p>}\n          {product[\"Exos Part Number\"] && (\n            <p className=\"product-part-number\">{product[\"Exos Part Number\"]}</p>\n          )}\n        </div>\n\n        {/* Show note for Not Approved items */}\n        {currentStatus === 'Not Approved' && currentNote && (\n          <div className=\"status-note\">\n            <strong>Note:</strong> {currentNote}\n          </div>\n        )}\n\n        <div className=\"product-actions\">\n          <div style={{ display: 'flex', flexDirection: 'row', gap: '0.5rem', alignItems: 'center', marginBottom: '0.5rem' }}>\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={quantity}\n              onChange={e => setQuantity(e.target.value.replace(/^0+/, ''))}\n              className=\"quantity-input\"\n              style={{ width: '60px', height: '38px' }}\n              placeholder=\"Qty\"\n            />\n            <select\n              value={selectedGym}\n              onChange={e => setSelectedGym(e.target.value)}\n              className=\"gym-select\"\n              style={{ width: '90px', height: '38px' }}\n            >\n              <option value=\"\">Gym</option>\n              <option value=\"MP2\">MP2</option>\n              <option value=\"MAT3\">MAT3</option>\n              <option value=\"MP5\">MP5</option>\n            </select>\n            <select\n              className=\"status-select\"\n              value={currentStatus}\n              onChange={e => handleStatusChange(e.target.value)}\n              data-status={currentStatus}\n              style={{ width: 'calc(100% - 160px)', height: '38px' }}\n            >\n              <option value=\"\">Status</option>\n              {STATUS_OPTIONS.map(opt => (\n                <option \n                  key={opt.value} \n                  value={opt.value}\n                >\n                  {opt.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            onClick={handleAddToGym}\n            disabled={!selectedGym || !quantity || isNaN(Number(quantity)) || Number(quantity) < 1}\n            className=\"add-to-gym-button\"\n          >\n            Add to Gym\n          </button>\n          <button\n            onClick={() => onCopyInfo(product)}\n            className={`copy-button ${copySuccess === product[\"Item Name\"] ? 'success' : ''}`}\n          >\n            {copySuccess === product[\"Item Name\"] ? 'Copied!' : 'Copy Info'}\n          </button>\n        </div>\n      </div>\n\n      {/* Note Modal for Not Approved Status */}\n      {showNoteModal && (\n        <div className=\"note-modal-overlay\">\n          <div className=\"note-modal\">\n            <h3>Add Note for \"Not Approved\"</h3>\n            <p>Please provide a reason why this item was not approved:</p>\n            <textarea\n              className=\"note-textarea\"\n              placeholder=\"Enter reason for disapproval...\"\n              rows=\"3\"\n              value={noteText}\n              onChange={e => setNoteText(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && e.ctrlKey) {\n                  handleNoteSubmit();\n                }\n              }}\n            />\n            <div className=\"note-modal-buttons\">\n              <button onClick={handleNoteSubmit}>\n                Submit\n              </button>\n              <button onClick={handleNoteCancel}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    \"Item Name\": PropTypes.string,\n    Brand: PropTypes.string,\n    Category: PropTypes.string,\n    Cost: PropTypes.string,\n    \"Exos Part Number\": PropTypes.string,\n    Preferred: PropTypes.string,\n    URL: PropTypes.string,\n  }).isRequired,\n  onCopyInfo: PropTypes.func.isRequired,\n  copySuccess: PropTypes.string,\n  onAddToGym: PropTypes.func.isRequired,\n  itemStatuses: PropTypes.object,\n  onStatusChange: PropTypes.func,\n  statusNotes: PropTypes.object,\n  onNoteSubmit: PropTypes.func,\n};\n\nexport default React.memo(ProductCard); "],"names":["STATUS_OPTIONS","value","label","color","bgColor","description","ProductCard","_ref","_product$Preferred","product","onCopyInfo","copySuccess","onAddToGym","itemStatuses","onStatusChange","statusNotes","onNoteSubmit","quantity","setQuantity","useState","selectedGym","setSelectedGym","customQty","setCustomQty","previewUrl","setPreviewUrl","showNoteModal","setShowNoteModal","noteText","setNoteText","handleNoteSubmit","trim","currentStatus","currentNote","useEffect","isMounted","URL","fetch","concat","encodeURIComponent","then","res","json","data","status","screenshot","url","catch","finally","_jsxs","className","children","_jsx","href","target","rel","style","display","src","alt","Preferred","toLowerCase","role","Brand","Category","Cost","cost","replace","flexDirection","gap","alignItems","marginBottom","type","min","onChange","e","width","height","placeholder","map","opt","onClick","handleAddToGym","qty","parseInt","disabled","isNaN","Number","rows","onKeyDown","key","ctrlKey","handleNoteCancel","React"],"sourceRoot":""}