{"version":3,"file":"static/js/364.4bf79f6f.chunk.js","mappings":"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","sources":["components/ProductCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ProductCard({ product, onCopyInfo, copySuccess, onAddToGym }) {\n  const [quantity, setQuantity] = useState('1');\n  const [selectedGym, setSelectedGym] = useState('');\n  const [customQty, setCustomQty] = useState('');\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    if (value === 'custom') {\n      setQuantity('custom');\n      setCustomQty('');\n    } else {\n      setQuantity(value);\n      setCustomQty('');\n    }\n  };\n\n  const handleCustomQtyChange = (e) => {\n    const value = e.target.value;\n    if (/^\\d*$/.test(value)) {\n      setCustomQty(value);\n    }\n  };\n\n  const handleAddToGym = () => {\n    const qty = quantity === 'custom' ? parseInt(customQty, 10) : parseInt(quantity, 10);\n    if (selectedGym && qty > 0) {\n      onAddToGym(product, selectedGym, qty);\n      setQuantity('1');\n      setCustomQty('');\n      setSelectedGym('');\n    }\n  };\n\n  // Format cost to ensure single $ symbol\n  const formatCost = (cost) => {\n    if (!cost) return '';\n    // Remove any existing $ symbols and add a single one\n    return `$${cost.replace(/[$]/g, '')}`;\n  };\n\n  return (\n    <div className=\"product-card\">\n      <div className=\"product-card-content\">\n        <div className=\"product-card-header\">\n          <div className=\"title-container\">\n            <h3>{product[\"Item Name\"]}</h3>\n            {product.Preferred?.toLowerCase() === 'yes' && (\n              <span className=\"preferred-badge\">Preferred Item</span>\n            )}\n          </div>\n        </div>\n\n        <div className=\"product-details\">\n          <p className=\"product-brand\">{product.Brand}</p>\n          <p className=\"product-category\">{product.Category}</p>\n          {product.Cost && <p className=\"product-cost\">{formatCost(product.Cost)}</p>}\n          {product[\"Exos Part Number\"] && (\n            <p className=\"product-part-number\">{product[\"Exos Part Number\"]}</p>\n          )}\n        </div>\n\n        <div className=\"product-actions\">\n          <div style={{ display: 'flex', flexDirection: 'row', gap: '1rem', alignItems: 'center', marginBottom: '0.5rem' }}>\n            <select\n              value={selectedGym}\n              onChange={(e) => setSelectedGym(e.target.value)}\n              className=\"gym-select\"\n            >\n              <option value=\"\">Select Gym</option>\n              <option value=\"MP2\">MP2</option>\n              <option value=\"MAT3\">MAT3</option>\n              <option value=\"MP5\">MP5</option>\n            </select>\n            <select\n              value={quantity}\n              onChange={handleQuantityChange}\n              className=\"quantity-select\"\n              style={{ width: '80px', height: '38px' }}\n            >\n              {[...Array(10)].map((_, i) => (\n                <option key={i + 1} value={i + 1}>{i + 1}</option>\n              ))}\n              <option value=\"custom\">Custom</option>\n            </select>\n            {quantity === 'custom' && (\n              <input\n                type=\"number\"\n                min=\"1\"\n                value={customQty}\n                onChange={handleCustomQtyChange}\n                className=\"quantity-input\"\n                style={{ width: '60px', height: '38px' }}\n                placeholder=\"Qty\"\n              />\n            )}\n          </div>\n          <button\n            onClick={handleAddToGym}\n            disabled={!selectedGym || (quantity === 'custom' ? !customQty : false)}\n            className=\"add-to-gym-button\"\n          >\n            Add to Gym\n          </button>\n          <button\n            onClick={() => onCopyInfo(product)}\n            className={`copy-button ${copySuccess === product[\"Item Name\"] ? 'success' : ''}`}\n          >\n            {copySuccess === product[\"Item Name\"] ? 'Copied!' : 'Copy Info'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    \"Item Name\": PropTypes.string,\n    Brand: PropTypes.string,\n    Category: PropTypes.string,\n    Cost: PropTypes.string,\n    \"Exos Part Number\": PropTypes.string,\n    Preferred: PropTypes.string,\n  }).isRequired,\n  onCopyInfo: PropTypes.func.isRequired,\n  copySuccess: PropTypes.string,\n  onAddToGym: PropTypes.func.isRequired,\n};\n\nexport default ProductCard; "],"names":["_ref","_product$Preferred","product","onCopyInfo","copySuccess","onAddToGym","quantity","setQuantity","useState","selectedGym","setSelectedGym","customQty","setCustomQty","_jsx","className","children","_jsxs","Preferred","toLowerCase","Brand","Category","Cost","cost","concat","replace","style","display","flexDirection","gap","alignItems","marginBottom","value","onChange","e","target","width","height","Array","map","_","i","type","min","test","placeholder","onClick","handleAddToGym","qty","parseInt","disabled"],"sourceRoot":""}